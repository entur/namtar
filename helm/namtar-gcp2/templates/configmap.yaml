apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "app.name" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
data:
    application.properties: |-
      blobstore.gcs.project.id={{.Values.configMap.projectId}}
      blobstore.gcs.container.name={{.Values.configMap.gcsBucketName}}
      blobstore.gcs.subfolder=outbound/dated

      rutebanken.kubernetes.namespace={{ .Release.Namespace }}
      rutebanken.kubernetes.enabled=true

      namtar.incoming.port={{ .Values.service.http.internalPort }}

      namtar.tempfile.directory={{ .Values.tmpDirectory.path }}

      namtar.blobstore.polling.cron.expression=0 0/5 * ? * * *

      namtar.kafka.enabled={{.Values.configMap.kafkaEnabled}}
      namtar.kafka.topic.name={{.Values.configMap.topicName}}
      {{- if eq .Values.configMap.kafkaEnabled true }}
      namtar.kafka.brokers={{.Values.configMap.kafkaBrokers}}
      namtar.kafka.schema.registry.url={{.Values.configMap.registryUrl}}
      {{- end }}
      
      # Schema registry basic auth
      camel.component.kafka.additional-properties.basic.auth.credentials.source=USER_INFO
      camel.component.kafka.additional-properties.basic.auth.user.info=${NAMTAR_KAFKA_SASL_USERNAME}:${NAMTAR_KAFKA_SASL_PASSWORD}
                        
      spring.profiles.active=gcs-blobstore
      spring.main.sources=org.entur.namtar
      spring.datasource.platform=postgres
      spring.database.driverClassName=org.postgresql.Driver
      spring.datasource.url=jdbc:postgresql://localhost:5432/namtar
      spring.datasource.tomcat.max-active=30
      spring.datasource.username=namtar
      spring.jpa.database=POSTGRESQL
      spring.jpa.show-sql=false
      spring.jpa.generate-ddl=false
      spring.jpa.hibernate.ddl-auto=none

      namtar.import.disabled={{.Values.configMap.importDisabled}}

