/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.entur.namtar.model.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DatedServiceJourney extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6220774830014673909L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DatedServiceJourney\",\"namespace\":\"org.entur.namtar.model.avro\",\"fields\":[{\"name\":\"datedServiceJourneyId\",\"type\":\"string\"},{\"name\":\"departureDate\",\"type\":\"string\"},{\"name\":\"departureTime\",\"type\":\"string\"},{\"name\":\"lineRef\",\"type\":\"string\"},{\"name\":\"originalDatedServiceJourneyId\",\"type\":\"string\"},{\"name\":\"privateCode\",\"type\":\"string\"},{\"name\":\"publicationTimestamp\",\"type\":\"string\"},{\"name\":\"serviceJourneyId\",\"type\":\"string\"},{\"name\":\"sourceFileName\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence datedServiceJourneyId;
  @Deprecated public java.lang.CharSequence departureDate;
  @Deprecated public java.lang.CharSequence departureTime;
  @Deprecated public java.lang.CharSequence lineRef;
  @Deprecated public java.lang.CharSequence originalDatedServiceJourneyId;
  @Deprecated public java.lang.CharSequence privateCode;
  @Deprecated public java.lang.CharSequence publicationTimestamp;
  @Deprecated public java.lang.CharSequence serviceJourneyId;
  @Deprecated public java.lang.CharSequence sourceFileName;
  @Deprecated public int version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DatedServiceJourney() {}

  /**
   * All-args constructor.
   * @param datedServiceJourneyId The new value for datedServiceJourneyId
   * @param departureDate The new value for departureDate
   * @param departureTime The new value for departureTime
   * @param lineRef The new value for lineRef
   * @param originalDatedServiceJourneyId The new value for originalDatedServiceJourneyId
   * @param privateCode The new value for privateCode
   * @param publicationTimestamp The new value for publicationTimestamp
   * @param serviceJourneyId The new value for serviceJourneyId
   * @param sourceFileName The new value for sourceFileName
   * @param version The new value for version
   */
  public DatedServiceJourney(java.lang.CharSequence datedServiceJourneyId, java.lang.CharSequence departureDate, java.lang.CharSequence departureTime, java.lang.CharSequence lineRef, java.lang.CharSequence originalDatedServiceJourneyId, java.lang.CharSequence privateCode, java.lang.CharSequence publicationTimestamp, java.lang.CharSequence serviceJourneyId, java.lang.CharSequence sourceFileName, java.lang.Integer version) {
    this.datedServiceJourneyId = datedServiceJourneyId;
    this.departureDate = departureDate;
    this.departureTime = departureTime;
    this.lineRef = lineRef;
    this.originalDatedServiceJourneyId = originalDatedServiceJourneyId;
    this.privateCode = privateCode;
    this.publicationTimestamp = publicationTimestamp;
    this.serviceJourneyId = serviceJourneyId;
    this.sourceFileName = sourceFileName;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return datedServiceJourneyId;
    case 1: return departureDate;
    case 2: return departureTime;
    case 3: return lineRef;
    case 4: return originalDatedServiceJourneyId;
    case 5: return privateCode;
    case 6: return publicationTimestamp;
    case 7: return serviceJourneyId;
    case 8: return sourceFileName;
    case 9: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: datedServiceJourneyId = (java.lang.CharSequence)value$; break;
    case 1: departureDate = (java.lang.CharSequence)value$; break;
    case 2: departureTime = (java.lang.CharSequence)value$; break;
    case 3: lineRef = (java.lang.CharSequence)value$; break;
    case 4: originalDatedServiceJourneyId = (java.lang.CharSequence)value$; break;
    case 5: privateCode = (java.lang.CharSequence)value$; break;
    case 6: publicationTimestamp = (java.lang.CharSequence)value$; break;
    case 7: serviceJourneyId = (java.lang.CharSequence)value$; break;
    case 8: sourceFileName = (java.lang.CharSequence)value$; break;
    case 9: version = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'datedServiceJourneyId' field.
   * @return The value of the 'datedServiceJourneyId' field.
   */
  public java.lang.CharSequence getDatedServiceJourneyId() {
    return datedServiceJourneyId;
  }

  /**
   * Sets the value of the 'datedServiceJourneyId' field.
   * @param value the value to set.
   */
  public void setDatedServiceJourneyId(java.lang.CharSequence value) {
    this.datedServiceJourneyId = value;
  }

  /**
   * Gets the value of the 'departureDate' field.
   * @return The value of the 'departureDate' field.
   */
  public java.lang.CharSequence getDepartureDate() {
    return departureDate;
  }

  /**
   * Sets the value of the 'departureDate' field.
   * @param value the value to set.
   */
  public void setDepartureDate(java.lang.CharSequence value) {
    this.departureDate = value;
  }

  /**
   * Gets the value of the 'departureTime' field.
   * @return The value of the 'departureTime' field.
   */
  public java.lang.CharSequence getDepartureTime() {
    return departureTime;
  }

  /**
   * Sets the value of the 'departureTime' field.
   * @param value the value to set.
   */
  public void setDepartureTime(java.lang.CharSequence value) {
    this.departureTime = value;
  }

  /**
   * Gets the value of the 'lineRef' field.
   * @return The value of the 'lineRef' field.
   */
  public java.lang.CharSequence getLineRef() {
    return lineRef;
  }

  /**
   * Sets the value of the 'lineRef' field.
   * @param value the value to set.
   */
  public void setLineRef(java.lang.CharSequence value) {
    this.lineRef = value;
  }

  /**
   * Gets the value of the 'originalDatedServiceJourneyId' field.
   * @return The value of the 'originalDatedServiceJourneyId' field.
   */
  public java.lang.CharSequence getOriginalDatedServiceJourneyId() {
    return originalDatedServiceJourneyId;
  }

  /**
   * Sets the value of the 'originalDatedServiceJourneyId' field.
   * @param value the value to set.
   */
  public void setOriginalDatedServiceJourneyId(java.lang.CharSequence value) {
    this.originalDatedServiceJourneyId = value;
  }

  /**
   * Gets the value of the 'privateCode' field.
   * @return The value of the 'privateCode' field.
   */
  public java.lang.CharSequence getPrivateCode() {
    return privateCode;
  }

  /**
   * Sets the value of the 'privateCode' field.
   * @param value the value to set.
   */
  public void setPrivateCode(java.lang.CharSequence value) {
    this.privateCode = value;
  }

  /**
   * Gets the value of the 'publicationTimestamp' field.
   * @return The value of the 'publicationTimestamp' field.
   */
  public java.lang.CharSequence getPublicationTimestamp() {
    return publicationTimestamp;
  }

  /**
   * Sets the value of the 'publicationTimestamp' field.
   * @param value the value to set.
   */
  public void setPublicationTimestamp(java.lang.CharSequence value) {
    this.publicationTimestamp = value;
  }

  /**
   * Gets the value of the 'serviceJourneyId' field.
   * @return The value of the 'serviceJourneyId' field.
   */
  public java.lang.CharSequence getServiceJourneyId() {
    return serviceJourneyId;
  }

  /**
   * Sets the value of the 'serviceJourneyId' field.
   * @param value the value to set.
   */
  public void setServiceJourneyId(java.lang.CharSequence value) {
    this.serviceJourneyId = value;
  }

  /**
   * Gets the value of the 'sourceFileName' field.
   * @return The value of the 'sourceFileName' field.
   */
  public java.lang.CharSequence getSourceFileName() {
    return sourceFileName;
  }

  /**
   * Sets the value of the 'sourceFileName' field.
   * @param value the value to set.
   */
  public void setSourceFileName(java.lang.CharSequence value) {
    this.sourceFileName = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Creates a new DatedServiceJourney RecordBuilder.
   * @return A new DatedServiceJourney RecordBuilder
   */
  public static org.entur.namtar.model.avro.DatedServiceJourney.Builder newBuilder() {
    return new org.entur.namtar.model.avro.DatedServiceJourney.Builder();
  }

  /**
   * Creates a new DatedServiceJourney RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DatedServiceJourney RecordBuilder
   */
  public static org.entur.namtar.model.avro.DatedServiceJourney.Builder newBuilder(org.entur.namtar.model.avro.DatedServiceJourney.Builder other) {
    return new org.entur.namtar.model.avro.DatedServiceJourney.Builder(other);
  }

  /**
   * Creates a new DatedServiceJourney RecordBuilder by copying an existing DatedServiceJourney instance.
   * @param other The existing instance to copy.
   * @return A new DatedServiceJourney RecordBuilder
   */
  public static org.entur.namtar.model.avro.DatedServiceJourney.Builder newBuilder(org.entur.namtar.model.avro.DatedServiceJourney other) {
    return new org.entur.namtar.model.avro.DatedServiceJourney.Builder(other);
  }

  /**
   * RecordBuilder for DatedServiceJourney instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DatedServiceJourney>
    implements org.apache.avro.data.RecordBuilder<DatedServiceJourney> {

    private java.lang.CharSequence datedServiceJourneyId;
    private java.lang.CharSequence departureDate;
    private java.lang.CharSequence departureTime;
    private java.lang.CharSequence lineRef;
    private java.lang.CharSequence originalDatedServiceJourneyId;
    private java.lang.CharSequence privateCode;
    private java.lang.CharSequence publicationTimestamp;
    private java.lang.CharSequence serviceJourneyId;
    private java.lang.CharSequence sourceFileName;
    private int version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.entur.namtar.model.avro.DatedServiceJourney.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.datedServiceJourneyId)) {
        this.datedServiceJourneyId = data().deepCopy(fields()[0].schema(), other.datedServiceJourneyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.departureDate)) {
        this.departureDate = data().deepCopy(fields()[1].schema(), other.departureDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.departureTime)) {
        this.departureTime = data().deepCopy(fields()[2].schema(), other.departureTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lineRef)) {
        this.lineRef = data().deepCopy(fields()[3].schema(), other.lineRef);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.originalDatedServiceJourneyId)) {
        this.originalDatedServiceJourneyId = data().deepCopy(fields()[4].schema(), other.originalDatedServiceJourneyId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.privateCode)) {
        this.privateCode = data().deepCopy(fields()[5].schema(), other.privateCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.publicationTimestamp)) {
        this.publicationTimestamp = data().deepCopy(fields()[6].schema(), other.publicationTimestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serviceJourneyId)) {
        this.serviceJourneyId = data().deepCopy(fields()[7].schema(), other.serviceJourneyId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sourceFileName)) {
        this.sourceFileName = data().deepCopy(fields()[8].schema(), other.sourceFileName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.version)) {
        this.version = data().deepCopy(fields()[9].schema(), other.version);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing DatedServiceJourney instance
     * @param other The existing instance to copy.
     */
    private Builder(org.entur.namtar.model.avro.DatedServiceJourney other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.datedServiceJourneyId)) {
        this.datedServiceJourneyId = data().deepCopy(fields()[0].schema(), other.datedServiceJourneyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.departureDate)) {
        this.departureDate = data().deepCopy(fields()[1].schema(), other.departureDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.departureTime)) {
        this.departureTime = data().deepCopy(fields()[2].schema(), other.departureTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lineRef)) {
        this.lineRef = data().deepCopy(fields()[3].schema(), other.lineRef);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.originalDatedServiceJourneyId)) {
        this.originalDatedServiceJourneyId = data().deepCopy(fields()[4].schema(), other.originalDatedServiceJourneyId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.privateCode)) {
        this.privateCode = data().deepCopy(fields()[5].schema(), other.privateCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.publicationTimestamp)) {
        this.publicationTimestamp = data().deepCopy(fields()[6].schema(), other.publicationTimestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serviceJourneyId)) {
        this.serviceJourneyId = data().deepCopy(fields()[7].schema(), other.serviceJourneyId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sourceFileName)) {
        this.sourceFileName = data().deepCopy(fields()[8].schema(), other.sourceFileName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.version)) {
        this.version = data().deepCopy(fields()[9].schema(), other.version);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'datedServiceJourneyId' field.
      * @return The value.
      */
    public java.lang.CharSequence getDatedServiceJourneyId() {
      return datedServiceJourneyId;
    }

    /**
      * Sets the value of the 'datedServiceJourneyId' field.
      * @param value The value of 'datedServiceJourneyId'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setDatedServiceJourneyId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.datedServiceJourneyId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'datedServiceJourneyId' field has been set.
      * @return True if the 'datedServiceJourneyId' field has been set, false otherwise.
      */
    public boolean hasDatedServiceJourneyId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'datedServiceJourneyId' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearDatedServiceJourneyId() {
      datedServiceJourneyId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'departureDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartureDate() {
      return departureDate;
    }

    /**
      * Sets the value of the 'departureDate' field.
      * @param value The value of 'departureDate'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setDepartureDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.departureDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'departureDate' field has been set.
      * @return True if the 'departureDate' field has been set, false otherwise.
      */
    public boolean hasDepartureDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'departureDate' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearDepartureDate() {
      departureDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'departureTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartureTime() {
      return departureTime;
    }

    /**
      * Sets the value of the 'departureTime' field.
      * @param value The value of 'departureTime'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setDepartureTime(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.departureTime = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'departureTime' field has been set.
      * @return True if the 'departureTime' field has been set, false otherwise.
      */
    public boolean hasDepartureTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'departureTime' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearDepartureTime() {
      departureTime = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineRef' field.
      * @return The value.
      */
    public java.lang.CharSequence getLineRef() {
      return lineRef;
    }

    /**
      * Sets the value of the 'lineRef' field.
      * @param value The value of 'lineRef'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setLineRef(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.lineRef = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lineRef' field has been set.
      * @return True if the 'lineRef' field has been set, false otherwise.
      */
    public boolean hasLineRef() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lineRef' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearLineRef() {
      lineRef = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalDatedServiceJourneyId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOriginalDatedServiceJourneyId() {
      return originalDatedServiceJourneyId;
    }

    /**
      * Sets the value of the 'originalDatedServiceJourneyId' field.
      * @param value The value of 'originalDatedServiceJourneyId'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setOriginalDatedServiceJourneyId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.originalDatedServiceJourneyId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'originalDatedServiceJourneyId' field has been set.
      * @return True if the 'originalDatedServiceJourneyId' field has been set, false otherwise.
      */
    public boolean hasOriginalDatedServiceJourneyId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'originalDatedServiceJourneyId' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearOriginalDatedServiceJourneyId() {
      originalDatedServiceJourneyId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'privateCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPrivateCode() {
      return privateCode;
    }

    /**
      * Sets the value of the 'privateCode' field.
      * @param value The value of 'privateCode'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setPrivateCode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.privateCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'privateCode' field has been set.
      * @return True if the 'privateCode' field has been set, false otherwise.
      */
    public boolean hasPrivateCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'privateCode' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearPrivateCode() {
      privateCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'publicationTimestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublicationTimestamp() {
      return publicationTimestamp;
    }

    /**
      * Sets the value of the 'publicationTimestamp' field.
      * @param value The value of 'publicationTimestamp'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setPublicationTimestamp(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.publicationTimestamp = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'publicationTimestamp' field has been set.
      * @return True if the 'publicationTimestamp' field has been set, false otherwise.
      */
    public boolean hasPublicationTimestamp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'publicationTimestamp' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearPublicationTimestamp() {
      publicationTimestamp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceJourneyId' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceJourneyId() {
      return serviceJourneyId;
    }

    /**
      * Sets the value of the 'serviceJourneyId' field.
      * @param value The value of 'serviceJourneyId'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setServiceJourneyId(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.serviceJourneyId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceJourneyId' field has been set.
      * @return True if the 'serviceJourneyId' field has been set, false otherwise.
      */
    public boolean hasServiceJourneyId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'serviceJourneyId' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearServiceJourneyId() {
      serviceJourneyId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceFileName' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceFileName() {
      return sourceFileName;
    }

    /**
      * Sets the value of the 'sourceFileName' field.
      * @param value The value of 'sourceFileName'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setSourceFileName(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.sourceFileName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceFileName' field has been set.
      * @return True if the 'sourceFileName' field has been set, false otherwise.
      */
    public boolean hasSourceFileName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sourceFileName' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearSourceFileName() {
      sourceFileName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder setVersion(int value) {
      validate(fields()[9], value);
      this.version = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public org.entur.namtar.model.avro.DatedServiceJourney.Builder clearVersion() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public DatedServiceJourney build() {
      try {
        DatedServiceJourney record = new DatedServiceJourney();
        record.datedServiceJourneyId = fieldSetFlags()[0] ? this.datedServiceJourneyId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.departureDate = fieldSetFlags()[1] ? this.departureDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.departureTime = fieldSetFlags()[2] ? this.departureTime : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.lineRef = fieldSetFlags()[3] ? this.lineRef : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.originalDatedServiceJourneyId = fieldSetFlags()[4] ? this.originalDatedServiceJourneyId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.privateCode = fieldSetFlags()[5] ? this.privateCode : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.publicationTimestamp = fieldSetFlags()[6] ? this.publicationTimestamp : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.serviceJourneyId = fieldSetFlags()[7] ? this.serviceJourneyId : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.sourceFileName = fieldSetFlags()[8] ? this.sourceFileName : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.version = fieldSetFlags()[9] ? this.version : (java.lang.Integer) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
